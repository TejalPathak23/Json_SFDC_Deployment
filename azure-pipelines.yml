# azure-pipelines.yml
trigger:
  - main

parameters:
  - name: targetEnvironment
    displayName: "Select Deployment Environment"
    type: string
    default: sandbox
    values:
      - sandbox
      - production

variables:
  - name: loginUrl
    ${{ if eq(parameters.targetEnvironment, 'production') }}:
      value: 'https://login.salesforce.com'
    ${{ else }}:
      value: 'https://test.salesforce.com'

stages:
  - stage: DeploySalesforce
    displayName: "Deploy Salesforce with Conditional Test Options"
    jobs:
      - job: SalesforceDeployment
        displayName: "Salesforce CLI Installation, Auth, and Deployment"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          # 1. Install Node.js so that npm is available
          - task: NodeTool@0
            inputs:
              versionSpec: '16.x'
            displayName: 'Install Node.js'

          # 2. Install the Salesforce CLI using npm
          - script: |
              echo "Verifying npm version..."
              npm --version
              echo "Installing Salesforce CLI globally..."
              npm install --global sfdx-cli
            displayName: 'Install Salesforce CLI'

          # 3. Authenticate to Salesforce using device login (FIXED VARIABLE EXPANSION)
          - script: |
              echo "Checking Salesforce CLI version..."
              sfdx --version
              echo "Authenticating to Salesforce on URL: $(loginUrl)"
              sfdx force:auth:device:login -r $(loginUrl) --setdefaultusername
            displayName: 'Salesforce Device Login'

          # 4. Conditional deployments:
          #    - Production => RunAllTests
          #    - Sandbox => NoTestRun
          - ${{ if eq(parameters.targetEnvironment, 'production') }}:
            - script: |
                echo "Deploying to production environment with RunAllTests..."
                sfdx force:source:deploy -p force-app --testlevel RunAllTests
              displayName: 'Deploy Source (RunAllTests)'

          - ${{ if ne(parameters.targetEnvironment, 'production') }}:
            - script: |
                echo "Deploying to sandbox environment with NoTestRun..."
                sfdx force:source:deploy -p force-app --testlevel NoTestRun
              displayName: 'Deploy Source (NoTestRun)'
