# azure-pipelines.yml

trigger:
  - main

parameters:
  - name: targetEnvironment
    displayName: "Select Deployment Environment"
    type: string
    default: sandbox
    values:
      - sandbox
      - production

variables:
  name: loginUrl
  ${{ if eq(parameters.targetEnvironment, 'production') }}:
    value: 'https://login.salesforce.com'
  ${{ else }}:
    value: 'https://test.salesforce.com'

stages:
  - stage: DeployFromJSON
    displayName: "Deploy JSON Data to Salesforce"
    jobs:
      - job: SalesforceJSONDeployment
        displayName: "Salesforce JSON Conversion & Deployment"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '16.x'
            displayName: 'Install Node.js'

          - script: |
              echo "Installing Salesforce CLI..."
              npm install sfdx-cli --global
            displayName: 'Install Salesforce CLI'

          - script: |
              echo "Authenticating to Salesforce using device login on URL: $(loginUrl)"
              sfdx force:auth:device:login -r $(loginUrl) --setdefaultusername
            displayName: 'Salesforce Device Login'

          - script: |
              echo "Extracting JSON data..."
              mkdir -p metadata
              cp data/*.json metadata/
            displayName: 'Extract JSON Data'

          - script: |
              echo "Converting JSON to Salesforce Metadata API format..."
              node scripts/jsonToMetadata.js
            displayName: 'Convert JSON to Metadata'

          - script: |
              echo "Deploying converted metadata to Salesforce..."
              sfdx force:mdapi:deploy -d metadata --wait 10
            displayName: 'Deploy Metadata to Salesforce'

          # Production deployment: Run tests
          - ${{ if eq(parameters.targetEnvironment, 'production') }}:
            - script: |
                echo "Running tests before deploying to Production..."
                sfdx force:mdapi:deploy -d metadata --wait 10 --testlevel RunLocalTests
              displayName: 'Deploy Metadata with Tests'

          # Sandbox deployment: Skip tests
          - ${{ if ne(parameters.targetEnvironment, 'production') }}:
            - script: |
                echo "Skipping tests for Sandbox deployment..."
                sfdx force:mdapi:deploy -d metadata --wait 10 --testlevel NoTestRun
              displayName: 'Deploy Metadata without Tests'
